-- MySQL Script generated by MySQL Workbench
-- 05/14/16 15:06:12
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `users` ;

CREATE TABLE IF NOT EXISTS `users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(20) NOT NULL,
  `password` VARCHAR(50) NOT NULL,
  `status` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `item_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `item_types` ;

CREATE TABLE IF NOT EXISTS `item_types` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `item_qualities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `item_qualities` ;

CREATE TABLE IF NOT EXISTS `item_qualities` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `item_grades`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `item_grades` ;

CREATE TABLE IF NOT EXISTS `item_grades` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `item_slots`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `item_slots` ;

CREATE TABLE IF NOT EXISTS `item_slots` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `item_materials`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `item_materials` ;

CREATE TABLE IF NOT EXISTS `item_materials` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `item_images`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `item_images` ;

CREATE TABLE IF NOT EXISTS `item_images` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `source` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `source_UNIQUE` (`source` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `item_models`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `item_models` ;

CREATE TABLE IF NOT EXISTS `item_models` (
  `id` INT NOT NULL,
  `name` VARCHAR(40) NOT NULL,
  `image` INT NOT NULL,
  `type` INT NOT NULL,
  `quality` INT NOT NULL,
  `grade` INT NOT NULL,
  `weight` INT NOT NULL,
  `slot` INT NOT NULL,
  `material` INT NOT NULL,
  `consumable` TINYINT(1) NOT NULL,
  `destructible` TINYINT(1) NOT NULL,
  `durable` TINYINT(1) NOT NULL,
  `equippable` TINYINT(1) NOT NULL,
  `reusable` TINYINT(1) NOT NULL,
  `stackable` TINYINT(1) NOT NULL,
  `upgradable` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `im_type_fk_idx` (`type` ASC),
  INDEX `im_qual_fk_idx` (`quality` ASC),
  INDEX `im_grad_fk_idx` (`grade` ASC),
  INDEX `im_slot_fk_idx` (`slot` ASC),
  INDEX `im_mate_fk_idx` (`material` ASC),
  INDEX `im_imag_fk_idx` (`image` ASC),
  CONSTRAINT `im_type_fk`
    FOREIGN KEY (`type`)
    REFERENCES `item_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `im_qual_fk`
    FOREIGN KEY (`quality`)
    REFERENCES `item_qualities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `im_grad_fk`
    FOREIGN KEY (`grade`)
    REFERENCES `item_grades` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `im_slot_fk`
    FOREIGN KEY (`slot`)
    REFERENCES `item_slots` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `im_mate_fk`
    FOREIGN KEY (`material`)
    REFERENCES `item_materials` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `im_imag_fk`
    FOREIGN KEY (`image`)
    REFERENCES `item_images` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `items`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `items` ;

CREATE TABLE IF NOT EXISTS `items` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `model` INT NOT NULL,
  `grade` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `it_model_fk_idx` (`model` ASC),
  CONSTRAINT `it_model_fk`
    FOREIGN KEY (`model`)
    REFERENCES `item_models` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `characters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `characters` ;

CREATE TABLE IF NOT EXISTS `characters` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  `location` INT NOT NULL,
  `guild` INT NOT NULL,
  `team` INT NOT NULL,
  `status` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventories` ;

CREATE TABLE IF NOT EXISTS `inventories` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `character` INT NOT NULL,
  `capacity` INT NOT NULL,
  PRIMARY KEY (`id`, `character`),
  INDEX `inv_char_fk_idx` (`character` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `inv_char_fk`
    FOREIGN KEY (`character`)
    REFERENCES `characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipments` ;

CREATE TABLE IF NOT EXISTS `equipments` (
  `character` INT NOT NULL,
  `helm` INT NULL,
  `neck` INT NULL,
  `armor` INT NULL,
  `gloves` INT NULL,
  `waist` INT NULL,
  `pants` INT NULL,
  `boots` INT NULL,
  `ring1` INT NULL,
  `ring2` INT NULL,
  `hand_left` INT NULL,
  `hand_right` INT NULL,
  INDEX `eq_helm_fk_idx` (`helm` ASC),
  INDEX `eq_neck_fk_idx` (`neck` ASC),
  INDEX `eq_armor_fk_idx` (`armor` ASC),
  INDEX `eq_glov_fk_idx` (`gloves` ASC),
  INDEX `eq_wais_fk_idx` (`waist` ASC),
  INDEX `eq_pant_fk_idx` (`pants` ASC),
  INDEX `eq_boot_fk_idx` (`boots` ASC),
  INDEX `eq_rin1_fk_idx` (`ring1` ASC),
  INDEX `eq_rin2_fk_idx` (`ring2` ASC),
  INDEX `eq_hndl_fk_idx` (`hand_left` ASC),
  INDEX `eq_hndr_fk_idx` (`hand_right` ASC),
  UNIQUE INDEX `character_UNIQUE` (`character` ASC),
  UNIQUE INDEX `helm_UNIQUE` (`helm` ASC),
  UNIQUE INDEX `neck_UNIQUE` (`neck` ASC),
  UNIQUE INDEX `armor_UNIQUE` (`armor` ASC),
  UNIQUE INDEX `gloves_UNIQUE` (`gloves` ASC),
  UNIQUE INDEX `waist_UNIQUE` (`waist` ASC),
  UNIQUE INDEX `pants_UNIQUE` (`pants` ASC),
  UNIQUE INDEX `boots_UNIQUE` (`boots` ASC),
  UNIQUE INDEX `ring1_UNIQUE` (`ring1` ASC),
  UNIQUE INDEX `ring2_UNIQUE` (`ring2` ASC),
  UNIQUE INDEX `hand_left_UNIQUE` (`hand_left` ASC),
  UNIQUE INDEX `hand_right_UNIQUE` (`hand_right` ASC),
  CONSTRAINT `eq_char_fk`
    FOREIGN KEY (`character`)
    REFERENCES `characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `eq_helm_fk`
    FOREIGN KEY (`helm`)
    REFERENCES `items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `eq_neck_fk`
    FOREIGN KEY (`neck`)
    REFERENCES `items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `eq_armo_fk`
    FOREIGN KEY (`armor`)
    REFERENCES `items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `eq_glov_fk`
    FOREIGN KEY (`gloves`)
    REFERENCES `items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `eq_wais_fk`
    FOREIGN KEY (`waist`)
    REFERENCES `items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `eq_pant_fk`
    FOREIGN KEY (`pants`)
    REFERENCES `items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `eq_boot_fk`
    FOREIGN KEY (`boots`)
    REFERENCES `items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `eq_rin1_fk`
    FOREIGN KEY (`ring1`)
    REFERENCES `items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `eq_rin2_fk`
    FOREIGN KEY (`ring2`)
    REFERENCES `items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `eq_hndl_fk`
    FOREIGN KEY (`hand_left`)
    REFERENCES `items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `eq_hndr_fk`
    FOREIGN KEY (`hand_right`)
    REFERENCES `items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventories_items`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventories_items` ;

CREATE TABLE IF NOT EXISTS `inventories_items` (
  `inventory` INT NOT NULL AUTO_INCREMENT,
  `nr` INT NOT NULL COMMENT 'slot number (1, 2, 3 etc) in character\'s inventory',
  `item` INT NOT NULL,
  UNIQUE INDEX `item_UNIQUE` (`item` ASC),
  PRIMARY KEY (`inventory`, `nr`),
  CONSTRAINT `ii_item_fk`
    FOREIGN KEY (`item`)
    REFERENCES `items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ii_inv_fk`
    FOREIGN KEY (`inventory`)
    REFERENCES `inventories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `users_characters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `users_characters` ;

CREATE TABLE IF NOT EXISTS `users_characters` (
  `user` INT NOT NULL,
  `character` INT NOT NULL,
  PRIMARY KEY (`user`, `character`),
  INDEX `uc_char_fk_idx` (`character` ASC),
  CONSTRAINT `uc_user_fk`
    FOREIGN KEY (`user`)
    REFERENCES `users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `uc_char_fk`
    FOREIGN KEY (`character`)
    REFERENCES `characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Placeholder table for view `myInventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myInventory` (`nr` INT, `id` INT, `name` INT, `image` INT);

-- -----------------------------------------------------
-- View `myInventory`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `myInventory` ;
DROP TABLE IF EXISTS `myInventory`;
CREATE  OR REPLACE VIEW `myInventory` AS
	SELECT invi.nr, i.id, im.name, im.image
    FROM inventories inv
		JOIN inventories_items invi ON(inv.id = invi.inventory)
		JOIN items i ON(invi.item = i.id)
        JOIN item_models im ON(i.model = im.id);
	#WHERE inv.character = ?;

DELIMITER $$

DROP TRIGGER IF EXISTS `characters_AFTER_INSERT` $$
CREATE DEFINER = CURRENT_USER TRIGGER `characters_AFTER_INSERT` AFTER INSERT ON `characters` FOR EACH ROW
BEGIN
	# create inventory for the character
	INSERT INTO inventories(`character`, `capacity`) VALUES (NEW.id, 100);

	# create equipment for the character
	#INSERT INTO equipments(character, helm, neck, armor, gloves, waist, pants, boots, ring1, ring2, hand_left, hand_right)
	#	VALUES
	#(NEW.id, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
	
    # maybe you can do this?
    INSERT INTO equipments(characters) VALUES (NEW.id);

END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
