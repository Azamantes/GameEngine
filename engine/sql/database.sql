-- MySQL Script generated by MySQL Workbench
-- 05/21/16 13:37:20
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `users` ;

CREATE TABLE IF NOT EXISTS `users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(20) NOT NULL,
  `password` VARCHAR(50) NOT NULL,
  `status` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `item_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `item_types` ;

CREATE TABLE IF NOT EXISTS `item_types` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `item_qualities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `item_qualities` ;

CREATE TABLE IF NOT EXISTS `item_qualities` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `item_grades`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `item_grades` ;

CREATE TABLE IF NOT EXISTS `item_grades` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `item_slots`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `item_slots` ;

CREATE TABLE IF NOT EXISTS `item_slots` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `item_materials`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `item_materials` ;

CREATE TABLE IF NOT EXISTS `item_materials` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `item_images`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `item_images` ;

CREATE TABLE IF NOT EXISTS `item_images` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `source` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `source_UNIQUE` (`source` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `item_models`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `item_models` ;

CREATE TABLE IF NOT EXISTS `item_models` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(40) NOT NULL,
  `image` INT NOT NULL DEFAULT 1,
  `type` INT NOT NULL DEFAULT 1,
  `quality` INT NOT NULL DEFAULT 1,
  `grade` INT NOT NULL DEFAULT 1,
  `weight` INT NOT NULL DEFAULT 1,
  `slot` INT NOT NULL DEFAULT 1,
  `material` INT NOT NULL DEFAULT 1,
  `consumable` TINYINT(1) NOT NULL DEFAULT 0,
  `destructible` TINYINT(1) NOT NULL DEFAULT 1,
  `durable` TINYINT(1) NOT NULL DEFAULT 0,
  `equippable` TINYINT(1) NOT NULL DEFAULT 0,
  `reusable` TINYINT(1) NOT NULL DEFAULT 0,
  `stackable` TINYINT(1) NOT NULL DEFAULT 0,
  `upgradable` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `im_type_fk_idx` (`type` ASC),
  INDEX `im_qual_fk_idx` (`quality` ASC),
  INDEX `im_grad_fk_idx` (`grade` ASC),
  INDEX `im_slot_fk_idx` (`slot` ASC),
  INDEX `im_mate_fk_idx` (`material` ASC),
  INDEX `im_imag_fk_idx` (`image` ASC),
  CONSTRAINT `im_type_fk`
    FOREIGN KEY (`type`)
    REFERENCES `item_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `im_qual_fk`
    FOREIGN KEY (`quality`)
    REFERENCES `item_qualities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `im_grad_fk`
    FOREIGN KEY (`grade`)
    REFERENCES `item_grades` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `im_slot_fk`
    FOREIGN KEY (`slot`)
    REFERENCES `item_slots` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `im_mate_fk`
    FOREIGN KEY (`material`)
    REFERENCES `item_materials` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `im_imag_fk`
    FOREIGN KEY (`image`)
    REFERENCES `item_images` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `items`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `items` ;

CREATE TABLE IF NOT EXISTS `items` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `model` INT NOT NULL,
  `grade` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `it_model_fk_idx` (`model` ASC),
  CONSTRAINT `it_model_fk`
    FOREIGN KEY (`model`)
    REFERENCES `item_models` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `characters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `characters` ;

CREATE TABLE IF NOT EXISTS `characters` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  `status` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `users_characters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `users_characters` ;

CREATE TABLE IF NOT EXISTS `users_characters` (
  `user` INT NOT NULL,
  `character` INT NOT NULL,
  PRIMARY KEY (`user`, `character`),
  INDEX `uc_char_fk_idx` (`character` ASC),
  CONSTRAINT `uc_user_fk`
    FOREIGN KEY (`user`)
    REFERENCES `users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `uc_char_fk`
    FOREIGN KEY (`character`)
    REFERENCES `characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inventory_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inventory_types` ;

CREATE TABLE IF NOT EXISTS `inventory_types` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '1 - inventory\n2 - equipment',
  `name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `characters_items`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `characters_items` ;

CREATE TABLE IF NOT EXISTS `characters_items` (
  `character` INT NOT NULL,
  `type` INT NOT NULL COMMENT '1 - inventory\n2 - equipment\n3 - bags (containers) - they increase capacity of character\'s inventory\n\nTrigger:\n- type === 2  => check if item has correct slot',
  `item` INT NOT NULL,
  `slot` INT NOT NULL,
  PRIMARY KEY (`character`, `type`, `slot`),
  UNIQUE INDEX `item_UNIQUE` (`item` ASC),
  INDEX `chi_type_fk_idx` (`type` ASC),
  CONSTRAINT `chi_char_fk`
    FOREIGN KEY (`character`)
    REFERENCES `characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `chi_type_fk`
    FOREIGN KEY (`type`)
    REFERENCES `inventory_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `chi_item_fk`
    FOREIGN KEY (`item`)
    REFERENCES `items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `equipment_slots`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipment_slots` ;

CREATE TABLE IF NOT EXISTS `equipment_slots` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(15) NOT NULL COMMENT 'helm\nneck\narmor\ngloves\nwaist\npants\nboots\nring1\nring2\nhand left\nhand right',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `locations` ;

CREATE TABLE IF NOT EXISTS `locations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `locations_characters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `locations_characters` ;

CREATE TABLE IF NOT EXISTS `locations_characters` (
  `location` INT NOT NULL,
  `character` INT NOT NULL,
  PRIMARY KEY (`location`, `character`),
  INDEX `lc_char_fk_idx` (`character` ASC),
  CONSTRAINT `lc_loca_fk`
    FOREIGN KEY (`location`)
    REFERENCES `locations` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `lc_char_fk`
    FOREIGN KEY (`character`)
    REFERENCES `characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Placeholder table for view `myCharacters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myCharacters` (`userID` INT, `charID` INT, `charName` INT, `charLocation` INT);

-- -----------------------------------------------------
-- Placeholder table for view `myItems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myItems` (`charID` INT, `slotType` INT, `itemID` INT, `itemSlot` INT, `itemSlotString` INT, `itemType` INT, `itemName` INT, `itemImage` INT);

-- -----------------------------------------------------
-- Placeholder table for view `myInventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myInventory` (`charID` INT, `itemID` INT, `itemName` INT, `slotType` INT, `itemSlot` INT, `itemImage` INT);

-- -----------------------------------------------------
-- Placeholder table for view `myEquipment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myEquipment` (`charID` INT, `itemID` INT, `itemName` INT, `slotType` INT, `itemSlot` INT, `itemImage` INT);

-- -----------------------------------------------------
-- View `myCharacters`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `myCharacters` ;
DROP TABLE IF EXISTS `myCharacters`;
CREATE  OR REPLACE VIEW `myCharacters` AS
	SELECT
		uc.`user` AS userID,
		uc.`character` AS charID,
        c.`name` AS charName,
        lc.`location` AS charLocation
    FROM characters c
		JOIN users_characters uc ON (c.`id` = uc.`character`)
        JOIN locations_characters lc ON(c.`id` = lc.`character`);

-- -----------------------------------------------------
-- View `myItems`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `myItems` ;
DROP TABLE IF EXISTS `myItems`;
CREATE  OR REPLACE VIEW `myItems` AS
	SELECT
		chi.`character` AS charID,
        chi.`type` AS slotType,
        chi.`item` AS itemID,
        chi.`slot` AS itemSlot,
        es.`name` AS itemSlotString,
        invt.`name` AS itemType,
        im.`name` AS itemName,
        ima.`source` AS itemImage
    FROM characters_items chi
		JOIN inventory_types invt ON(chi.`type` = invt.`id`)
        JOIN items i ON(chi.`item` = i.`id`)
        JOIN item_models im ON(i.`model` = im.`id`)
        JOIN item_images ima ON(im.`image` = ima.`id`)
        LEFT OUTER JOIN equipment_slots es ON(chi.`slot` = es.id);

-- -----------------------------------------------------
-- View `myInventory`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `myInventory` ;
DROP TABLE IF EXISTS `myInventory`;
CREATE  OR REPLACE VIEW `myInventory` AS
	SELECT charID, itemID, itemName, slotType, itemSlot, itemImage
    FROM myItems
	WHERE itemType = 'inventory';

-- -----------------------------------------------------
-- View `myEquipment`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `myEquipment` ;
DROP TABLE IF EXISTS `myEquipment`;
CREATE  OR REPLACE VIEW `myEquipment` AS
	SELECT charID, itemID, itemName, slotType, itemSlot, itemImage
    FROM myItems
	WHERE itemType = 'equipment';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
